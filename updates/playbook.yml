---
- name: Automate OS and Package Updates
  hosts: localhost
  become: yes
  gather_facts: yes

  vars:
    reboot_if_required: true   # Optional â€” reboot only if needed

  tasks:

    - name: Update APT package cache (Debian/Ubuntu)
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Upgrade all packages - Debian/Ubuntu
      ansible.builtin.apt:
        upgrade: dist
      when: ansible_os_family == "Debian"

    - name: Update YUM packages (RHEL/CentOS/Amazon Linux 2)
      ansible.builtin.yum:
        name: "*"
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Update DNF packages (Amazon Linux 2023 / Fedora)
      ansible.builtin.dnf:
        name: "*"
        state: latest
      when: ansible_pkg_mgr == "dnf"

    - name: Check if reboot is required (Debian-based)
      stat:
        path: /var/run/reboot-required
      register: reboot_required
      when: ansible_os_family == "Debian"

    - name: Reboot if required - Debian
      ansible.builtin.reboot:
        msg: "Rebooting after updates"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
      when:
        - reboot_if_required
        - ansible_os_family == "Debian"
        - reboot_required.stat.exists

    - name: Reboot if required - RedHat-based (optional logic)
      ansible.builtin.reboot:
        msg: "Rebooting after updates"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
      when:
        - reboot_if_required
        - ansible_os_family == "RedHat"

